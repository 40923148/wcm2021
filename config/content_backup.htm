<h1>期中報告</h1>
<table border="1" style="border-collapse: collapse; width: 83.6426%; height: 90px;">
<tbody>
<tr style="height: 14px;">
<td style="width: 10%; height: 14px; text-align: center;">樓層</td>
<td style="width: 13%; height: 14px;"> 第一間</td>
<td style="width: 12%; height: 14px;"> 第二間</td>
<td style="width: 13.0412%; height: 14px;"> 第三間</td>
<td style="width: 12.9588%; height: 14px;"> 第四間</td>
<td style="width: 13%; height: 14px;">第五間</td>
<td style="width: 13%; height: 14px;"> 第六間</td>
</tr>
<tr style="height: 57.275px;">
<td style="width: 10%; text-align: center; height: 57.275px;">9 F</td>
<td style="width: 13%; height: 57.275px;"><a href="https://a40923148.herokuapp.com//?classroomno=BGA0901"> BGA0901 (國際會議廳) </a></td>
<td style="width: 12%; height: 57.275px;"> <a href="https://a40923148.herokuapp.com//?classroomno=BGA0911"> BGA0911 (機電實驗室) </a></td>
<td style="width: 13.0412%; height: 57.275px;"> <a href="https://a40923148.herokuapp.com//?classroomno=BGA0933"> BGA0933 (系統晶片設計實驗室) </a></td>
<td style="width: 12.9588%; height: 57.275px;"> </td>
<td style="width: 13%; height: 57.275px;"></td>
<td style="width: 13%; height: 57.275px;"> </td>
</tr>
<tr style="height: 53px;">
<td style="width: 10%; text-align: center; height: 53px;">8 F</td>
<td style="width: 13%; height: 53px;"><a href="https://a40923148.herokuapp.com/?classroomno=BGA0810"> BGA0810 (電腦輔助設計室)</a></td>
<td style="width: 12%; height: 53px;"><a href="https://a40923148.herokuapp.com/?classroomno=BGA0820"> BGA0820 (智慧感測與致動實驗室) </a></td>
<td style="width: 13.0412%; height: 53px;">
<p><a href="https://a40923148.herokuapp.com/?classroomno=BGA0823">BGA0823 (新產品創意設計中心)</a></p>
</td>
<td style="width: 12.9588%; height: 53px;"><a href="https://a40923148.herokuapp.com/?classroomno=BGA0830">BGA0830 (電腦輔助繪圖室)</a></td>
<td style="width: 13%; height: 53px;"><a href="https://a40923148.herokuapp.com/?classroomno=BGA0842"> BGA0842 (機械元件設計實驗室) </a></td>
<td style="width: 13%; height: 53px;"></td>
</tr>
<tr style="height: 63px;">
<td style="width: 10%; text-align: center; height: 63px;">7 F</td>
<td style="width: 13%; height: 63px;"><a href="https://a40923148.herokuapp.com/?classroomno=BGA0710"> BGA0710 (研討室(二))</a></td>
<td style="width: 12%; height: 63px;"></td>
<td style="width: 13.0412%; height: 63px;"><a href="https://a40923148.herokuapp.com/?classroomno=BGA0730">BGA0730 (研討室(一)) </a></td>
<td style="width: 12.9588%; height: 63px;"> </td>
<td style="width: 13%; height: 63px;"></td>
<td style="width: 13%; height: 63px;"> <a href="https://a40923148.herokuapp.com/?classroomno=BGA0760"> BGA0760 (逆向快速成型實驗室) </a></td>
</tr>
<tr style="height: 63px;">
<td style="width: 10%; text-align: center; height: 63px;">6 F</td>
<td style="width: 13%; height: 63px;"><a href="https://a40923148.herokuapp.com/?classroomno=BGA0611"> BGA0611 (研討室(三))</a></td>
<td style="width: 12%; height: 63px;"><a href="https://a40923148.herokuapp.com/?classroomno=BGA0620">BGA0620 (動態系統實驗室) </a></td>
<td style="width: 13.0412%; height: 63px;"></td>
<td style="width: 12.9588%; height: 63px;"><a href="https://a40923148.herokuapp.com/?classroomno=BGA0640"> BGA0640 (創意設計室)</a></td>
<td style="width: 13%; height: 63px;"></td>
<td style="width: 13%; height: 63px;"> </td>
</tr>
</tbody>
</table>
<p><br/> 程式碼: <a href="https://github.com/40923148/nfulist">https://github.com/40923148/nfulist</a></p>
<h1>About</h1>
<p>This is <a href="https://github.com/mdecourse/cmstemplate">https://github.com/mdecourse/cmstemplate</a></p>
<p><span>網際內容管理 (Web-based Content Management)</span></p>
<p>利用瀏覽器作為前端, 並將數位內容有系統地送到雲端伺服器中進行管理與運用的架構即稱為網際內容管理.</p>
<p>從機械設計專業的角度看待網際內容管理.</p>
<p>機械設計工程師應該從 CAD 出發透過零組件系統建立, 模擬與控制, 並在流程中利用 CAE 進行設計功能確認後, 將所有持續改進的內容透過分散式版次與網際管理系統進行保存與數位資料再利用.</p>
<h2>語法</h2>
<p><strong>cms</strong></p>
<p>老師為了同學方便把cd cmsimde  跟wsgi.py整合在一起，讓同學可以在自己的倉儲直接打開動態網頁。</p>
<p><strong>acp</strong></p>
<p>老師把git add .、git commit -m 、git push整合，讓同學可以直接推送，但要注意沒有把這次推送加上代號可能會出錯。</p>
<p><strong>wsgi.py</strong></p>
<p>打開動態網頁</p>
<p><strong><span>git add .</span></strong></p>
<p><span>找尋更新的內容</span></p>
<p><strong>git commit -m</strong></p>
<p>把更新的內容變成一個專案，記得要加上代號</p>
<p><strong>git push</strong></p>
<p>把全部的東西推送到遠端</p>
<p><strong>path</strong></p>
<p>路徑</p>
<p><br/><strong>dir</strong></p>
<p>磁碟內容</p>
<p><strong>regedit</strong></p>
<p><strong></strong>登入編輯</p>
<p><strong>git pull origin master </strong></p>
<p>更新到最新的資料</p>
<p>git clone (github網址).git</p>
<p>把<span>github倉儲複製到資料夾，以git形式</span></p>
<p></p>
<h1>上課內容</h1>
<h2>w1</h2>
<p>還未選課沒上到課</p>
<h2>w2</h2>
<p>更改標題</p>
<h2>w3</h2>
<p>改版</p>
<p>我上課時要改成最新版結果失敗了，詢問老師後，好像是我有弄壞一部份的靜態，需要從遠端重新抓新的下來，下課後抽時間重新抓了一次，然後又把up_dir資料夾更新，這次沒有跑一大堆錯誤出來，但我看資料夾並沒有上課所說的五個檔案，需要星期四上課再去詢問老師。</p>
<h2>w4</h2>
<p>成功的把上禮拜失敗的改版完成了，原因是，git pull指令無法被接受，需要指定哪個檔案(遠端的分支)。</p>
<p>課表原始碼介紹利用和開啟各個課表的方法(更改那些變數，和必要的變數),回去用ssh跟github連線</p>
<div class="line number1 index0 alt2"><code class="py keyword"></code>回家後測試使用SSH，結果失敗了，尋找錯誤的方法中。.......</div>
<h2>w5</h2>
<p>今天老師上課教我們更新cmsimde，跟如何設定SSH，也讓我知道握哪裡設定錯誤，是之前的錯誤，教學完後還有太多人不懂所以我就去幫同學解決他們發生錯誤的地方</p>
<h3>SSH</h3>
<p>1.首先我們需要登入github在自己的帳號中開啟設定，在設定中尋找SSH and GPG keys ，然後先按New SSHkey做準備。</p>
<p>2.在 start_ipv6.bat (編輯器)加入<span> </span><span>set GIT_SSH=%Disk%:\putty\plink.exe。</span></p>
<p><span>3.開啟 Putty 目錄中的 puttygen.exe,(沒有putty從a.kmol.info:88下載)，點擊Generate下載新Key(移動滑鼠進度條才會動)，最上面出現的亂碼為新鑰匙，全選後丟進剛剛在github預備的New SSHkey(記得存)，記得用SciTE 編輯儲存鑰匙(_rsa 檔)，然後用Save private key再存一次(.ppk檔)，兩個檔案存在tmp/keys裡</span></p>
<p>4.開啟<span>putty.exe建立一個 session用於以 ssh 協定連線到 github.com(在hostname),名稱可任意但Proxy須設定學校的(筆電不用Proxy可以選None)，Auth記得選之前儲存.ppk的檔案，最後回開頭存檔</span></p>
<p>5.最後則是要修改tmp/wcm2021/.git裡面config的url(之前的可在前面加#即可)，url改成git@(<span>session的名子)</span>:(帳號)/(倉儲名子).git(原url下面)(是origin下面的url)</p>
<p>名子盡量相同會增加成功率，失敗就多試幾次說不定會成功</p>
<p></p>
<h2>W6</h2>
<p>今天老師說了SSH的原理嚷我更加了解SSH的運作方式，雖然我依舊不明白相同的動作，有時候會設定成功有時候不行的原因是甚麼。</p>
<p>還有註冊heroku跟把a.kmol.info:88的heroku.7z解壓縮到data裡面，在設定<span> start_ipv6.bat (編輯器)heroku的路徑，之後要教得因為時間問題延到下禮拜(Github連結heroku的方法)</span></p>
<h2>w7</h2>
<p><span></span>開始準備期中分組報告</p>
<p>heroku連結到倉儲，需要</p>
<p>從a.kmol.info:88下載Heroku，放到data下，再用編輯器把啟動器的Heroku路徑打上。</p>
<p>測試是否有連接上，<span>輸入 heroku version，有出現版本號便成。</span></p>
<p><span>未出現原因</span></p>
<p><span>1.編輯器味編寫正確</span></p>
<p>2.檔案不完整</p>
<p>完成後推送方法</p>
<p>1.<code class="py plain">heroku login </code><code class="py keyword">-</code><code class="py plain">i  (<span>以 interactive 模式登入 Heroku)(記得打帳號密碼)</span></code></p>
<p><span face="monospace" style="font-family: monospace;">2cd到要推送得倉儲</span></p>
<p><span face="monospace" style="font-family: monospace;">3.<code class="py plain">heroku git:remote </code><code class="py keyword">-</code><code class="py plain">a s40923148(自己的)</code><code class="py plain"> (<span>針對已經登入的 Heroku 帳號下的 s40923148 app, 設為此倉儲的 remote 同步倉儲</span></code></span></p>
<p><span face="monospace" style="font-family: monospace;"><code class="py plain"><span>4.</span></code></span>git add .</p>
<p>5.git commit -am "make it better"</p>
<pre>6.git push heroku </pre>
<p><span face="monospace" style="font-family: monospace;"></span></p>
<p></p>
<p>編輯器設定</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">path=%Disk%:;%path_python%;%path_portablegit%;%path_heroku%;%path%;</pre>
<p>路近加上Heroku</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"> set path_heroku=%Disk%:\heroku\bin;</pre>
<p>標示路徑<br/><br/></p>
<p></p>
<p></p>
<p></p>
<p>再次教學如何設定SSH跟解釋</p>
<h2>w8</h2>
<p>開始分組報告，要負責把一個github的倉儲推送去heroku，內容要包括機械設計系大樓教室的課表，可以的話把各個樓層都放上按鈕。</p>
<p><span>教務主機查詢電腦輔助設計室排課時間表的python介紹</span></p>
<p></p>
<h3>Heroku</h3>
<p>1.創新的Heroku，不能用已經推送過的，不然會一直錯誤。</p>
<p>2.創新的Github，然後把<span> </span><a href="https://github.com/mdecourse/nfulist/blob/master/Procfile">Procfile</a><span>,<span> </span></span><a href="https://github.com/mdecourse/nfulist/blob/master/requirements.txt">requirements.txt</a><span><span> </span>與<span> </span></span><a href="https://github.com/mdecourse/nfulist/blob/master/runtime.txt">runtime.txt</a><span>,<span> ，都推送上去。</span></span></p>
<p>3.設定wsgi.py(負責打開6~9樓教室課表)(最下面)</p>
<p>4.最後就是推送，<span>Github跟Heroku，(打開Heroku網址後在網址後加上?<code class="py plain">classroomno </code><code class="py keyword">=</code><span> </span><code class="py string">BGAxxxx可改變教室)</code></span></p>
<p></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import requests
import bs4
# for os.environ and os.system
import os
# for geting html file path
import pathlib
# 以下因應改為 Heroku based 程式所需導入模組,  修改步驟 1/6
from flask import Flask, request 
from flask_cors import CORS
 
 
# 修改步驟 2/6 , 加入 Flask 相關物件設定
app = Flask(__name__)
# 此一設定可以讓程式跨網域擷取資料
CORS(app)
 
# for pythn 3.9,  在近端測試時仍需要設定 proxy, 若使用 Python 3.8 執行則會自動使用系統的 Proxy 設定
proxy = 'http://[2001:288:6004:17::69]:3128'
 
os.environ['http_proxy'] = proxy 
os.environ['HTTP_PROXY'] = proxy
os.environ['https_proxy'] = proxy
os.environ['HTTPS_PROXY'] = proxy
'''
url:  'jclassroom_ajax.php',
data: { pselyr: pselyr, pselclssroom: pselclssroom },
'''
 
# 修改步驟 3/6, 試著將程式改為網際模式, 需要套用 Flask 的網際 decorator
@app.route('/')
def timeTableList():
    semester = '1092'
    classroomno = 'BGA0810'
    column = True
 
    if semester == None:
        semester = '1092'
    if classroomno == None:
        # BGA0810 電腦輔助設計室
        classroomno = 'BGA0810'
         
    headers = {'X-Requested-With': 'XMLHttpRequest'}
 
    url = 'https://qry.nfu.edu.tw/jclassroom_ajax.php'
    post_var = {'pselyr': semester, 'pselclssroom': classroomno}
 
    result = requests.post(url, data = post_var, headers = headers)
 
    soup = bs4.BeautifulSoup(result.content, 'lxml')
 
    # 先除掉所有 anchor
    for a in soup.findAll('a'):
        # bs3 語法
        #a.replaceWithChildren()
        # bs4 語法, 將標註與內容拆開
        a.unwrap()
 
    # 根據輸出設定, 取出 class='tbcls' 的 table 資料
    table = soup.find('table', {'class': 'tbcls'})
 
    # 重建 table, 設定邊線為 1 pixel
    output = "&lt;table border='1'&gt;"
 
    for i in table.contents:
        # 利用 replace 復原  
        output += str(i).replace(" ", " ")
    output += "&lt;/table&gt;"
    #print(output)
    # 修改步驟 5/6 , 因為已經將原先可列印出程式的步驟改為 function, 因此必須以 return 將擷取到的網頁資料傳回
    return output
     
# 修改步驟 4/6 , 因為改寫為網際程式後, 下列將內容存檔並自動呼叫 Firefox 的程式碼不再適用, 必須蓋掉
'''
# 將 output 寫入 w1_classroom.html
fileName = "w1_classroom.html"
with open(fileName, "w", encoding="utf-8") as file:
    file.write(output)
# 利用 os.system() 以 default browser 開啟 w1_class_local.html
filePath = pathlib.Path(__file__).parent.absolute()
#print(filePath)
# set firefox as default browser and start url to open html file
os.system("start file:///" + str(filePath) + "\\" + fileName)
'''
 
# 修改步驟 6/6, 配合網際程式啟動,  以及 Python 程式執行與納入其他程式執行的特定進行配置
 
if __name__ == '__main__':
    app.run(host='127.0.0.1', port=8080, debug=True)
</pre>
<p></p>
<div id="gtx-trans" style="position: absolute; left: 41px; top: 383.875px;">
<div class="gtx-trans-icon"></div>
</div>